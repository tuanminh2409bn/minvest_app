//localization.ts

import { v2 as translate } from '@google-cloud/translate';

// Kh·ªüi t·∫°o Google Translate client m·ªôt l·∫ßn duy nh·∫•t
const translateClient = new translate.Translate();

// ƒê·ªãnh nghƒ©a c√°c lo·∫°i th√¥ng b√°o m√† ch√∫ng ta s·∫Ω d·ªãch
type NotificationType = 'new_signal' | 'signal_matched' | 'tp1_hit' | 'tp2_hit' | 'tp3_hit' | 'sl_hit';

// ƒê·ªãnh nghƒ©a c·∫•u tr√∫c cho c√°c m·∫´u c√¢u
interface Template {
    title: string;
    body: string;
}

// Ch·ª©a t·∫•t c·∫£ c√°c m·∫´u c√¢u g·ªëc b·∫±ng ti·∫øng Vi·ªát
// C√°c s·ªë trong ngo·∫∑c nh·ªçn {0}, {1},... l√† c√°c tham s·ªë s·∫Ω ƒë∆∞·ª£c thay th·∫ø sau n√†y
const templates: Record<NotificationType, Template> = {
    new_signal: {
        title: "‚ö°Ô∏è T√≠n hi·ªáu m·ªõi: {0} {1}", // {0}: lo·∫°i l·ªánh (MUA/B√ÅN), {1}: c·∫∑p ti·ªÅn
        body: "Entry: {2} | SL: {3}",     // {2}: gi√° entry, {3}: gi√° SL
    },
    signal_matched: {
        title: "‚úÖ {0} {1} ƒê√£ kh·ªõp l·ªánh!", // {0}: lo·∫°i l·ªánh, {1}: c·∫∑p ti·ªÅn
        body: "T√≠n hi·ªáu ƒë√£ kh·ªõp entry t·∫°i gi√° {2}.", // {2}: gi√° entry
    },
    tp1_hit: {
        title: "üéØ {0} {1} ƒë√£ ƒë·∫°t TP1!",
        body: "Ch√∫c m·ª´ng! T√≠n hi·ªáu ƒë√£ ch·ªët l·ªùi ·ªü m·ª©c TP1.",
    },
    tp2_hit: {
        title: "üéØüéØ {0} {1} ƒë√£ ƒë·∫°t TP2!",
        body: "Xu·∫•t s·∫Øc! T√≠n hi·ªáu ti·∫øp t·ª•c ch·ªët l·ªùi ·ªü m·ª©c TP2.",
    },
    tp3_hit: {
        title: "üèÜ {0} {1} ƒë√£ ƒë·∫°t TP3!",
        body: "M·ª•c ti√™u cu·ªëi c√πng ƒë√£ ho√†n th√†nh!",
    },
    sl_hit: {
        title: "‚ùå {0} {1} ƒë√£ ch·∫°m Stop Loss.",
        body: "R·∫•t ti·∫øc, t√≠n hi·ªáu ƒë√£ ch·∫°m ƒëi·ªÉm d·ª´ng l·ªó.",
    },
};

/**
 * H√†m n√†y nh·∫≠n lo·∫°i th√¥ng b√°o v√† d·ªØ li·ªáu, tr·∫£ v·ªÅ m·ªôt ƒë·ªëi t∆∞·ª£ng ch·ª©a title v√† body
 * ƒë√£ ƒë∆∞·ª£c d·ªãch sang c√°c ng√¥n ng·ªØ ƒë∆∞·ª£c h·ªó tr·ª£ (vi, en).
 * @param type Lo·∫°i th√¥ng b√°o (v√≠ d·ª•: 'new_signal').
 * @param args Danh s√°ch c√°c gi√° tr·ªã ƒë·ªông ƒë·ªÉ ƒëi·ªÅn v√†o m·∫´u c√¢u (v√≠ d·ª•: 'BUY', 'XAU/USD', 1234.5).
 * @returns M·ªôt Promise ch·ª©a ƒë·ªëi t∆∞·ª£ng payload ƒë√£ ƒë∆∞·ª£c b·∫£n ƒë·ªãa h√≥a.
 */
export async function getLocalizedPayload(type: NotificationType, ...args: (string | number)[]) {
    const template = templates[type];

    // 1. T·∫°o n·ªôi dung ti·∫øng Vi·ªát t·ª´ m·∫´u c√¢u
    const titleVi = template.title.replace(/{(\d+)}/g, (match, index) => String(args[Number(index)] ?? ''));
    const bodyVi = template.body.replace(/{(\d+)}/g, (match, index) => String(args[Number(index)] ?? ''));

    try {
        // 2. D·ªãch ƒë·ªìng th·ªùi c·∫£ title v√† body sang ti·∫øng Anh ƒë·ªÉ t·ªëi ∆∞u th·ªùi gian
        const [translations] = await translateClient.translate([titleVi, bodyVi], 'en');
        const [titleEn, bodyEn] = translations;

        // 3. Tr·∫£ v·ªÅ ƒë·ªëi t∆∞·ª£ng ch·ª©a c·∫£ 2 ng√¥n ng·ªØ
        return {
            title_loc: { vi: titleVi, en: titleEn },
            body_loc: { vi: bodyVi, en: bodyEn },
        };
    } catch (error) {
        console.error(`L·ªói d·ªãch thu·∫≠t cho th√¥ng b√°o lo·∫°i '${type}':`, error);
        // Trong tr∆∞·ªùng h·ª£p d·ªãch l·ªói, s·ª≠ d·ª•ng ti·∫øng Vi·ªát l√†m ng√¥n ng·ªØ d·ª± ph√≤ng cho ti·∫øng Anh
        // ƒë·ªÉ kh√¥ng l√†m gi√°n ƒëo·∫°n lu·ªìng g·ª≠i th√¥ng b√°o.
        return {
            title_loc: { vi: titleVi, en: titleVi }, // D·ª± ph√≤ng
            body_loc: { vi: bodyVi, en: bodyVi },   // D·ª± ph√≤ng
        };
    }
}